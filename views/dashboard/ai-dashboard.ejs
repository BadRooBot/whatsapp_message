<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>لوحة تحكم الذكاء الاصطناعي - WhatsApp Messenger</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <%- include('../partials/layout') %>
  <div class="container-fluid">
    <div class="row">
      
      <div class="col-md-10 main-content">
        <div class="row">
          <div class="col-12">
            <h1 class="mb-4"><i class="fas fa-robot"></i> لوحة تحكم الذكاء الاصطناعي</h1>
          </div>
        </div>

        <div class="row">
          <div class="col-md-6">
            <div class="card mb-4">
              <div class="card-header bg-primary text-white">
                <h4><i class="fas fa-cog"></i> إعدادات الذكاء الاصطناعي</h4>
              </div>
              <div class="card-body">
                <form id="aiSettingsForm" class="mb-4">
                  <div class="card">
                    <div class="card-header">
                      <h5 class="mb-0">إعدادات الذكاء الاصطناعي</h5>
                    </div>
                    <div class="card-body">
                      <!-- مفتاح API -->
                      <div class="form-group">
                        <label for="apiKey">مفتاح API (OpenAI)</label>
                        <input type="password" class="form-control" id="apiKey" name="apiKey" value="<%= aiSettings ? aiSettings.api_key : '' %>">
                        <small class="form-text text-muted">قم بإدخال مفتاح API الخاص بك من OpenAI</small>
                      </div>

                      <!-- تفعيل الرد التلقائي -->
                      <div class="form-group">
                        <div class="custom-control custom-switch">
                          <input type="checkbox" class="custom-control-input" id="autoReply" name="autoReply" <%= aiSettings && aiSettings.auto_reply ? 'checked' : '' %>>
                          <label class="custom-control-label" for="autoReply">تفعيل الرد التلقائي</label>
                        </div>
                      </div>

                      <!-- نمط الرد التلقائي -->
                      <div class="form-group mt-3" id="autoReplyModeSection">
                        <label>نمط الرد التلقائي</label>
                        <div class="custom-control custom-radio">
                          <input type="radio" id="modeAll" name="autoReplyMode" value="all" class="custom-control-input" 
                              <%= aiSettings && aiSettings.auto_reply_mode === 'all' ? 'checked' : '' %>>
                          <label class="custom-control-label" for="modeAll">الرد على الكل (كل الأرقام)</label>
                        </div>
                        <div class="custom-control custom-radio">
                          <input type="radio" id="modeWhitelist" name="autoReplyMode" value="whitelist" class="custom-control-input" 
                              <%= !aiSettings || !aiSettings.auto_reply_mode || aiSettings.auto_reply_mode === 'whitelist' ? 'checked' : '' %>>
                          <label class="custom-control-label" for="modeWhitelist">الرد فقط على الأرقام المسموح بها (القائمة البيضاء)</label>
                        </div>
                        <div class="custom-control custom-radio">
                          <input type="radio" id="modeBlacklist" name="autoReplyMode" value="blacklist" class="custom-control-input" 
                              <%= aiSettings && aiSettings.auto_reply_mode === 'blacklist' ? 'checked' : '' %>>
                          <label class="custom-control-label" for="modeBlacklist">الرد على الكل ما عدا المحظورين (القائمة السوداء)</label>
                        </div>
                      </div>

                      <!-- الأرقام المسموح بها -->
                      <div class="card shadow mt-3 mb-3" id="allowedNumbersCard">
                        <div class="card-header py-2">
                          <h6 class="m-0 font-weight-bold text-primary">الأرقام المسموح بها</h6>
                        </div>
                        <div class="card-body">
                          <div class="mb-3">
                            <div class="d-flex">
                              <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" class="form-control" id="allowedNumber" placeholder="أدخل رقم أو اسم للبحث..." autocomplete="off">
                              </div>
                              <button type="button" class="btn btn-primary mx-2" id="addAllowedNumber">إضافة</button>
                            </div>
                            <small class="form-text text-muted">أدخل الأرقام بصيغة دولية بدون + أو مسافات أو شرطات (مثال: 966500000000) أو اكتب اسم جهة اتصال للبحث</small>
                          </div>

                          <!-- نتائج البحث للأرقام المسموح بها -->
                          <div class="mt-2 mb-3 d-none" id="allowedSearchResults">
                            <h6 class="border-bottom pb-2">نتائج البحث:</h6>
                            <ul class="list-group search-results-list" id="allowedSearchResultsList">
                              <!-- ستظهر هنا نتائج البحث -->
                            </ul>
                          </div>

                          <div class="mt-3">
                            <h6 class="border-bottom pb-2">الأرقام المضافة:</h6>
                            <ul class="list-group" id="allowedNumbersList">
                              <% if (aiSettings && aiSettings.allowed_numbers && aiSettings.allowed_numbers.length > 0) { %>
                                <% aiSettings.allowed_numbers.forEach(function(item) { %>
                                  <% 
                                    // التحقق مما إذا كان العنصر نصًا بسيطًا أو كائنًا
                                    let numberId = typeof item === 'object' ? item.id : item;
                                    let displayName = typeof item === 'object' ? item.name : ''; 
                                  %>
                                  <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                      <% if (displayName) { %>
                                        <i class="<%= numberId.includes('@g.us') ? 'fas fa-users text-info' : 'fas fa-user text-primary' %> me-2"></i>
                                        <span class="fw-bold"><%= displayName %></span>
                                        <small class="text-muted mx-2">(<%= numberId %>)</small>
                                      <% } else { %>
                                        <%= numberId %>
                                      <% } %>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-danger remove-allowed-number" data-number="<%= numberId %>">حذف</button>
                                  </li>
                                <% }); %>
                              <% } else { %>
                                <li class="list-group-item text-center text-muted" id="noAllowedNumbersMsg">لا توجد أرقام مسموح بها محددة</li>
                              <% } %>
                            </ul>
                          </div>
                        </div>
                      </div>

                      <!-- الأرقام المحظورة -->
                      <div class="card shadow mt-3 mb-3" id="blockedNumbersCard">
                        <div class="card-header py-2 d-flex justify-content-between align-items-center">
                          <h6 class="m-0 font-weight-bold text-primary">الأرقام المحظورة</h6>
                          <button type="button" class="btn btn-sm btn-warning" id="addAllGroupsBtn">
                            <i class="fas fa-users"></i> إضافة جميع المجموعات
                          </button>
                        </div>
                        <div class="card-body">
                          <div class="mb-3">
                            <div class="d-flex">
                              <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" class="form-control" id="blockedNumber" placeholder="أدخل رقم أو اسم للبحث..." autocomplete="off">
                              </div>
                              <button type="button" class="btn btn-primary mx-2" id="addBlockedNumber">إضافة</button>
                            </div>
                            <small class="form-text text-muted">أدخل الأرقام بصيغة دولية بدون + أو مسافات أو شرطات (مثال: 966500000000) أو اكتب اسم جهة اتصال للبحث</small>
                          </div>

                          <!-- نتائج البحث للأرقام المحظورة -->
                          <div class="mt-2 mb-3 d-none" id="blockedSearchResults">
                            <h6 class="border-bottom pb-2">نتائج البحث:</h6>
                            <ul class="list-group search-results-list" id="blockedSearchResultsList">
                              <!-- ستظهر هنا نتائج البحث -->
                            </ul>
                          </div>

                          <div class="mt-3">
                            <h6 class="border-bottom pb-2">الأرقام المضافة:</h6>
                            <ul class="list-group" id="blockedNumbersList">
                              <% if (aiSettings && aiSettings.blocked_numbers && aiSettings.blocked_numbers.length > 0) { %>
                                <% aiSettings.blocked_numbers.forEach(function(item) { %>
                                  <% 
                                    // التحقق مما إذا كان العنصر نصًا بسيطًا أو كائنًا
                                    let numberId = typeof item === 'object' ? item.id : item;
                                    let displayName = typeof item === 'object' ? item.name : ''; 
                                  %>
                                  <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                      <% if (displayName) { %>
                                        <i class="<%= numberId.includes('@g.us') ? 'fas fa-users text-info' : 'fas fa-user text-primary' %> me-2"></i>
                                        <span class="fw-bold"><%= displayName %></span>
                                        <small class="text-muted mx-2">(<%= numberId %>)</small>
                                      <% } else { %>
                                        <%= numberId %>
                                      <% } %>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-danger remove-blocked-number" data-number="<%= numberId %>">حذف</button>
                                  </li>
                                <% }); %>
                              <% } else { %>
                                <li class="list-group-item text-center text-muted" id="noBlockedNumbersMsg">لا توجد أرقام محظورة محددة</li>
                              <% } %>
                            </ul>
                          </div>
                        </div>
                      </div>

                      <!-- إعدادات أخرى للذكاء الاصطناعي -->
                      <div class="mb-3">
                        <div class="form-check form-switch">
                          <input class="form-check-input" type="checkbox" id="enableMemory" name="enableMemory" <%= aiSettings.enable_memory ? 'checked' : '' %>>
                          <label class="form-check-label" for="enableMemory">تفعيل الذاكرة</label>
                        </div>
                      </div>

                      <div class="mb-3">
                        <label class="form-label">نافذة الذاكرة</label>
                        <input type="number" class="form-control" id="memoryWindow" name="memoryWindow" value="<%= aiSettings.memory_window %>" min="1" max="50">
                      </div>

                      <!-- إعدادات نموذج الذكاء الاصطناعي -->
                      <div class="card shadow mt-3 mb-3">
                        <div class="card-header py-2 d-flex justify-content-between align-items-center">
                          <h6 class="m-0 font-weight-bold text-primary">إعدادات النموذج</h6>
                          <button type="button" class="btn btn-sm btn-info" id="refreshModelsBtn">
                            <i class="fas fa-sync-alt"></i> تحديث النماذج
                          </button>
                        </div>
                        <div class="card-body">
                          <!-- اختيار النموذج -->
                          <div class="form-group">
                            <label for="model">نموذج الذكاء الاصطناعي</label>
                            <select class="form-control" id="model" name="model">
                              <% if (typeof availableModels !== 'undefined' && availableModels && availableModels.length > 0) { %>
                                <% availableModels.forEach(function(model) { %>
                                  <option value="<%= model.id %>" <%= aiSettings.model === model.id ? 'selected' : '' %>>
                                    <%= model.name %> (<%= model.id %>)
                                  </option>
                                <% }); %>
                              <% } else { %>
                                <option value="deepseek/deepseek-chat:free" <%= aiSettings.model === 'deepseek/deepseek-chat:free' ? 'selected' : '' %>>
                                  Deepseek Chat (Free)
                                </option>
                                <option value="anthropic/claude-3-haiku:1" <%= aiSettings.model === 'anthropic/claude-3-haiku:1' ? 'selected' : '' %>>
                                  Claude 3 Haiku
                                </option>
                                <option value="anthropic/claude-3-opus:1" <%= aiSettings.model === 'anthropic/claude-3-opus:1' ? 'selected' : '' %>>
                                  Claude 3 Opus
                                </option>
                                <option value="anthropic/claude-3-sonnet:1" <%= aiSettings.model === 'anthropic/claude-3-sonnet:1' ? 'selected' : '' %>>
                                  Claude 3 Sonnet
                                </option>
                                <option value="meta-llama/llama-3-8b-instruct:1" <%= aiSettings.model === 'meta-llama/llama-3-8b-instruct:1' ? 'selected' : '' %>>
                                  Llama 3 8B
                                </option>
                                <option value="meta-llama/llama-3-70b-instruct:1" <%= aiSettings.model === 'meta-llama/llama-3-70b-instruct:1' ? 'selected' : '' %>>
                                  Llama 3 70B
                                </option>
                              <% } %>
                            </select>
                            <small class="form-text text-muted">اختر النموذج الذي تريد استخدامه للردود التلقائية</small>
                          </div>

                          <!-- درجة الحرارة للإبداع -->
                          <div class="form-group">
                            <label for="temperature">درجة الإبداع (Temperature): <span id="temperatureValue"><%= aiSettings.temperature || 0.7 %></span></label>
                            <input type="range" class="form-control-range" id="temperature" name="temperature" min="0" max="2" step="0.1" value="<%= aiSettings.temperature || 0.7 %>">
                            <small class="form-text text-muted">أقل للإجابات الأكثر دقة، أعلى للإجابات الأكثر إبداعًا</small>
                          </div>

                          <!-- الحد الأقصى للتوكنز -->
                          <div class="form-group">
                            <label for="maxTokens">الحد الأقصى للتوكنز</label>
                            <input type="number" class="form-control" id="maxTokens" name="maxTokens" value="<%= aiSettings.max_tokens || 500 %>" min="100" max="10000">
                            <small class="form-text text-muted">عدد التوكنز المسموح بها في الرد (الحد الأقصى يختلف حسب النموذج)</small>
                          </div>

                          <!-- سياق النظام -->
                          <div class="form-group">
                            <label for="systemPrompt">سياق النظام (System Prompt)</label>
                            <textarea class="form-control" id="systemPrompt" name="systemPrompt" rows="4"><%= aiSettings.system_prompt || '' %></textarea>
                            <small class="form-text text-muted">تعليمات عامة للذكاء الاصطناعي حول كيفية الرد</small>
                          </div>
                        </div>
                      </div>

                      <button type="submit" class="btn btn-primary">حفظ الإعدادات</button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
          
          <div class="col-md-6">
            <div class="card mb-4">
              <div class="card-header bg-success text-white">
                <h4><i class="fas fa-vial"></i> اختبار الذكاء الاصطناعي</h4>
              </div>
              <div class="card-body">
                <form id="ai-test-form">
                  <div class="mb-3">
                    <label for="testMessage" class="form-label">اكتب رسالة لاختبار الذكاء الاصطناعي</label>
                    <textarea class="form-control" id="testMessage" name="message" rows="3" required></textarea>
                  </div>
                  
                  <div class="d-grid">
                    <button type="submit" class="btn btn-success" id="testButton">
                      <i class="fas fa-paper-plane"></i> إرسال
                    </button>
                  </div>
                </form>
                
                <div class="mt-3 d-none" id="responseContainer">
                  <div class="card">
                    <div class="card-header bg-light">
                      <h5><i class="fas fa-robot"></i> رد الذكاء الاصطناعي</h5>
                    </div>
                    <div class="card-body">
                      <p id="aiResponse"></p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col-md-12">
            <div class="card">
              <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                <h4><i class="fas fa-history"></i> آخر التفاعلات</h4>
                <a href="/ai/history" class="btn btn-light btn-sm">
                  <i class="fas fa-list"></i> عرض السجل الكامل
                </a>
              </div>
              <div class="card-body">
                <% if (recentInteractions && recentInteractions.length > 0) { %>
                  <div class="table-responsive">
                    <table class="table table-striped">
                      <thead>
                        <tr>
                          <th>جهة الاتصال</th>
                          <th>الرسالة</th>
                          <th>الرد</th>
                          <th>التاريخ</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% recentInteractions.forEach(interaction => { %>
                          <tr>
                            <td><%= interaction.contact_name || 'غير معروف' %></td>
                            <td><%= interaction.message.length > 30 ? interaction.message.substring(0, 30) + '...' : interaction.message %></td>
                            <td><%= interaction.response.length > 30 ? interaction.response.substring(0, 30) + '...' : interaction.response %></td>
                            <td><%= new Date(interaction.created_at).toLocaleString('ar-SA') %></td>
                          </tr>
                        <% }); %>
                      </tbody>
                    </table>
                  </div>
                <% } else { %>
                  <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> لا توجد تفاعلات حديثة مع الذكاء الاصطناعي.
                  </div>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function() {
      // متغيرات لتخزين الأرقام
      var allowedNumbers = [];
      var blockedNumbers = [];
      
      // تهيئة متغيرات الأرقام المسموح بها والمحظورة
      if (typeof aiSettings !== 'undefined') {
        if (aiSettings.allowed_numbers && Array.isArray(aiSettings.allowed_numbers)) {
          allowedNumbers = aiSettings.allowed_numbers;
        }
        
        if (aiSettings.blocked_numbers && Array.isArray(aiSettings.blocked_numbers)) {
          blockedNumbers = aiSettings.blocked_numbers;
        }
      }
      
      // إظهار/إخفاء الأقسام بناءً على وضع الرد التلقائي
      function updateVisibility() {
        var mode = $('input[name="autoReplyMode"]:checked').val();
        var autoReplyEnabled = $('#autoReply').is(':checked');
        
        $('#autoReplyModeSection').toggle(autoReplyEnabled);
        $('#allowedNumbersCard').toggle(autoReplyEnabled && (mode === 'whitelist' || mode === 'all'));
        $('#blockedNumbersCard').toggle(autoReplyEnabled && (mode === 'blacklist' || mode === 'all'));
      }
      
      // تحديث الحالة عند تحميل الصفحة
      updateVisibility();
      
      // مراقبة التغييرات في خيارات الرد التلقائي
      $('#autoReply').change(updateVisibility);
      $('input[name="autoReplyMode"]').change(updateVisibility);
      
      // متغيرات عامة لتخزين توقيت البحث
      let allowedSearchTimeout = null;
      let blockedSearchTimeout = null;

      // البحث في جهات الاتصال عند الكتابة في حقل الأرقام المسموح بها
      $('#allowedNumber').on('input', function() {
        const query = $(this).val().trim();
        clearTimeout(allowedSearchTimeout);
        
        if (query.length < 2) {
          $('#allowedSearchResults').addClass('d-none');
          return;
        }
        
        // تأخير البحث لتجنب الطلبات المتكررة
        allowedSearchTimeout = setTimeout(function() {
          searchContacts(query, 'allowed');
        }, 300);
      });

      // البحث في جهات الاتصال عند الكتابة في حقل الأرقام المحظورة
      $('#blockedNumber').on('input', function() {
        const query = $(this).val().trim();
        clearTimeout(blockedSearchTimeout);
        
        if (query.length < 2) {
          $('#blockedSearchResults').addClass('d-none');
          return;
        }
        
        // تأخير البحث لتجنب الطلبات المتكررة
        blockedSearchTimeout = setTimeout(function() {
          searchContacts(query, 'blocked');
        }, 300);
      });

      // دالة البحث في جهات الاتصال
      function searchContacts(query, type) {
        $.ajax({
          url: '/ai/search-contacts',
          method: 'GET',
          data: { query },
          success: function(response) {
            if (response.success) {
              displaySearchResults(response.contacts, type);
            } else {
              console.error('Error:', response.error);
            }
          },
          error: function(xhr, status, error) {
            console.error('AJAX Error:', error);
          }
        });
      }

      // دالة عرض نتائج البحث
      function displaySearchResults(contacts, type) {
        const resultsList = type === 'allowed' ? '#allowedSearchResultsList' : '#blockedSearchResultsList';
        const resultsContainer = type === 'allowed' ? '#allowedSearchResults' : '#blockedSearchResults';
        
        $(resultsList).empty();
        
        if (contacts.length === 0) {
          $(resultsList).append('<li class="list-group-item text-center text-muted">لا توجد نتائج مطابقة</li>');
          $(resultsContainer).removeClass('d-none');
          return;
        }
        
        contacts.forEach(function(contact) {
          const displayText = contact.name + (contact.number ? ` (${contact.number})` : '');
          const contactNumber = contact.number || contact.id.split('@')[0];
          
          const li = `
            <li class="list-group-item search-result-item d-flex justify-content-between align-items-center" 
                data-number="${contact.id}" data-name="${contact.name}" data-is-group="${contact.isGroup}">
              <div>
                <i class="${contact.isGroup ? 'fas fa-users text-info' : 'fas fa-user text-primary'} me-2"></i>
                ${displayText}
              </div>
              <button type="button" class="btn btn-sm btn-success add-${type}-result">
                <i class="fas fa-plus"></i> إضافة
              </button>
            </li>
          `;
          
          $(resultsList).append(li);
        });
        
        $(resultsContainer).removeClass('d-none');
      }

      // إضافة رقم من نتائج البحث إلى قائمة الأرقام المسموح بها
      $(document).on('click', '.add-allowed-result', function() {
        const $item = $(this).closest('.search-result-item');
        const number = $item.data('number');
        const name = $item.data('name');
        const isGroup = $item.data('is-group');
        
        // التحقق مما إذا كان الرقم موجودًا بالفعل
        const exists = allowedNumbers.some(item => {
          if (typeof item === 'object') {
            return item.id === number;
          } else {
            return item === number;
          }
        });
        
        if (exists) {
          alert('هذا الرقم موجود بالفعل في القائمة');
          return;
        }
        
        // إضافة الرقم كعنصر كائن مع الاسم
        const contactObj = {
          id: number,
          name: name,
          isGroup: isGroup
        };
        
        allowedNumbers.push(contactObj);
        
        $('#noAllowedNumbersMsg').remove();
        
        const li = `
          <li class="list-group-item d-flex justify-content-between align-items-center">
            <div>
              <i class="${isGroup ? 'fas fa-users text-info' : 'fas fa-user text-primary'} me-2"></i>
              <span class="fw-bold">${name}</span>
              <small class="text-muted mx-2">(${number})</small>
            </div>
            <button type="button" class="btn btn-sm btn-danger remove-allowed-number" data-number="${number}">حذف</button>
          </li>
        `;
        
        $('#allowedNumbersList').append(li);
        $('#allowedNumber').val('');
        $('#allowedSearchResults').addClass('d-none');
      });

      // إضافة رقم من نتائج البحث إلى قائمة الأرقام المحظورة
      $(document).on('click', '.add-blocked-result', function() {
        const $item = $(this).closest('.search-result-item');
        const number = $item.data('number');
        const name = $item.data('name');
        const isGroup = $item.data('is-group');
        
        // التحقق مما إذا كان الرقم موجودًا بالفعل
        const exists = blockedNumbers.some(item => {
          if (typeof item === 'object') {
            return item.id === number;
          } else {
            return item === number;
          }
        });
        
        if (exists) {
          alert('هذا الرقم موجود بالفعل في قائمة المحظورين');
          return;
        }
        
        // إضافة الرقم كعنصر كائن مع الاسم
        const contactObj = {
          id: number,
          name: name,
          isGroup: isGroup
        };
        
        blockedNumbers.push(contactObj);
        
        $('#noBlockedNumbersMsg').remove();
        
        const li = `
          <li class="list-group-item d-flex justify-content-between align-items-center">
            <div>
              <i class="${isGroup ? 'fas fa-users text-info' : 'fas fa-user text-primary'} me-2"></i>
              <span class="fw-bold">${name}</span>
              <small class="text-muted mx-2">(${number})</small>
            </div>
            <button type="button" class="btn btn-sm btn-danger remove-blocked-number" data-number="${number}">حذف</button>
          </li>
        `;
        
        $('#blockedNumbersList').append(li);
        $('#blockedNumber').val('');
        $('#blockedSearchResults').addClass('d-none');
      });

      // إخفاء نتائج البحث عند النقر خارجها
      $(document).on('click', function(e) {
        if (!$(e.target).closest('#allowedNumber, #allowedSearchResults, #addAllowedNumber').length) {
          $('#allowedSearchResults').addClass('d-none');
        }
        if (!$(e.target).closest('#blockedNumber, #blockedSearchResults, #addBlockedNumber').length) {
          $('#blockedSearchResults').addClass('d-none');
        }
      });

      // إرسال النموذج لحفظ الإعدادات
      $('#aiSettingsForm').submit(function(e) {
        e.preventDefault();
        
        // جمع القيم من النموذج
        var formData = {
          apiKey: $('#apiKey').val(),
          model: $('#model').val(),
          temperature: $('#temperature').val(),
          maxTokens: $('#maxTokens').val(),
          systemPrompt: $('#systemPrompt').val(),
          autoReply: $('#autoReply').is(':checked'),
          autoReplyMode: $('input[name="autoReplyMode"]:checked').val(),
          allowedNumbers: allowedNumbers,
          blockedNumbers: blockedNumbers,
          groupReply: $('#groupReply').is(':checked'),
          groupTrigger: $('#groupTrigger').val(),
          memoryEnabled: $('#enableMemory').is(':checked'),
          memoryWindow: $('#memoryWindow').val()
        };
        
        // إرسال الإعدادات
        $.ajax({
          url: '/ai/configure',
          type: 'POST',
          contentType: 'application/json',
          data: JSON.stringify(formData),
          success: function(response) {
            if (response.success) {
              alert('تم حفظ الإعدادات بنجاح');
            } else {
              alert('حدث خطأ: ' + response.error);
            }
          },
          error: function(xhr, status, error) {
            console.error('Error:', error);
            alert('حدث خطأ أثناء حفظ الإعدادات');
          }
        });
      });
      
      // التعامل مع شريط التمرير للدرجة الحرارية
      $('#temperature').on('input', function() {
        $('#temperatureValue').text($(this).val());
      });

      // Test AI response
      $('#ai-test-form').submit(function(e) {
        e.preventDefault();
        
        const message = $('#testMessage').val();
        
        if (!message) {
          alert('يرجى كتابة رسالة للاختبار.');
          return;
        }
        
        const $button = $('#testButton');
        const originalText = $button.html();
        
        $button.html('<i class="fas fa-spinner fa-spin"></i> جاري المعالجة...').prop('disabled', true);
        
        $.ajax({
          url: '/ai/test',
          method: 'POST',
          data: {
            message
          },
          success: function(response) {
            $button.html(originalText).prop('disabled', false);
            
            if (response.success) {
              $('#responseContainer').removeClass('d-none');
              $('#aiResponse').text(response.response);
            } else {
              alert('حدث خطأ أثناء توليد الرد: ' + response.error);
            }
          },
          error: function() {
            $button.html(originalText).prop('disabled', false);
            alert('حدث خطأ أثناء الاتصال بالخادم.');
          }
        });
      });

      // تحديث قائمة النماذج المتاحة
      $('#refreshModelsBtn').click(function() {
        var $button = $(this);
        var $modelSelect = $('#model');
        var currentModel = $modelSelect.val(); // حفظ النموذج المحدد حالياً
        
        // تحديث حالة الزر
        $button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> جارٍ التحديث...');
        
        // طلب النماذج من الخادم
        $.ajax({
          url: '/ai/models',
          method: 'GET',
          dataType: 'json',
          success: function(response) {
            if (response.success && response.models && response.models.length > 0) {
              // إفراغ القائمة المنسدلة
              $modelSelect.empty();
              
              // إضافة النماذج الجديدة
              $.each(response.models, function(i, model) {
                var isSelected = model.id === currentModel;
                $modelSelect.append(
                  $('<option>', {
                    value: model.id,
                    text: model.name + ' (' + model.id + ')',
                    selected: isSelected
                  })
                );
              });
              
              alert('تم تحديث قائمة النماذج بنجاح');
            } else {
              alert('لم يتم العثور على نماذج متاحة');
            }
          },
          error: function() {
            alert('حدث خطأ أثناء تحديث قائمة النماذج');
          },
          complete: function() {
            // إعادة الزر إلى حالته الأصلية
            $button.prop('disabled', false).html('<i class="fas fa-sync-alt"></i> تحديث النماذج');
          }
        });
      });

      // حذف رقم من قائمة المسموح بها
      $(document).on('click', '.remove-allowed-number', function() {
        const number = $(this).data('number');
        
        // حذف الرقم من المصفوفة (سواء كان كائنًا أو نصًا)
        allowedNumbers = allowedNumbers.filter(item => {
          if (typeof item === 'object' && item.id) {
            return item.id !== number;
          } else {
            return item !== number;
          }
        });
        
        $(this).closest('li').remove();
        
        if (allowedNumbers.length === 0) {
          var noMsg = '<li id="noAllowedNumbersMsg" class="list-group-item text-center text-muted">' +
                    'لا توجد أرقام مسموح بها محددة' +
                    '</li>';
          $('#allowedNumbersList').append(noMsg);
        }
      });

      // حذف رقم من قائمة المحظورين
      $(document).on('click', '.remove-blocked-number', function() {
        const number = $(this).data('number');
        
        // حذف الرقم من المصفوفة (سواء كان كائنًا أو نصًا)
        blockedNumbers = blockedNumbers.filter(item => {
          if (typeof item === 'object' && item.id) {
            return item.id !== number;
          } else {
            return item !== number;
          }
        });
        
        $(this).closest('li').remove();
        
        if (blockedNumbers.length === 0) {
          var noMsg = '<li id="noBlockedNumbersMsg" class="list-group-item text-center text-muted">' +
                    'لا توجد أرقام محظورة محددة' +
                    '</li>';
          $('#blockedNumbersList').append(noMsg);
        }
      });

      // تعديل دالة إضافة رقم مسموح به
      $('#addAllowedNumber').click(function() {
        var number = $('#allowedNumber').val().trim();
        
        if (!number) {
          alert('الرجاء إدخال رقم صحيح');
          return;
        }
        
        // التحقق مما إذا كان الرقم موجودًا بالفعل
        const exists = allowedNumbers.some(item => {
          if (typeof item === 'object') {
            return item.id === number;
          } else {
            return item === number;
          }
        });
        
        if (exists) {
          alert('هذا الرقم موجود بالفعل في القائمة');
          return;
        }
        
        // قبول رقم الهاتف مباشرة
        allowedNumbers.push(number);
        
        $('#noAllowedNumbersMsg').remove();
        
        var li = '<li class="list-group-item d-flex justify-content-between align-items-center">' +
                number +
                '<button type="button" class="btn btn-sm btn-danger remove-allowed-number" data-number="' + number + '">حذف</button>' +
                '</li>';
        
        $('#allowedNumbersList').append(li);
        $('#allowedNumber').val('');
        $('#allowedSearchResults').addClass('d-none');
      });

      // تعديل دالة إضافة رقم محظور
      $('#addBlockedNumber').click(function() {
        var number = $('#blockedNumber').val().trim();
        
        if (!number) {
          alert('الرجاء إدخال رقم صحيح');
          return;
        }
        
        // التحقق مما إذا كان الرقم موجودًا بالفعل
        const exists = blockedNumbers.some(item => {
          if (typeof item === 'object') {
            return item.id === number;
          } else {
            return item === number;
          }
        });
        
        if (exists) {
          alert('هذا الرقم موجود بالفعل في قائمة المحظورين');
          return;
        }
        
        // قبول رقم الهاتف مباشرة
        blockedNumbers.push(number);
        
        $('#noBlockedNumbersMsg').remove();
        
        var li = '<li class="list-group-item d-flex justify-content-between align-items-center">' +
                number +
                '<button type="button" class="btn btn-sm btn-danger remove-blocked-number" data-number="' + number + '">حذف</button>' +
                '</li>';
        
        $('#blockedNumbersList').append(li);
        $('#blockedNumber').val('');
        $('#blockedSearchResults').addClass('d-none');
      });

      // إضافة جميع المجموعات إلى قائمة الأرقام المحظورة
      $('#addAllGroupsBtn').click(function() {
        console.log('زر إضافة المجموعات تم النقر عليه');
        $.ajax({
          url: '/ai/add-all-groups',
          method: 'POST',
          success: function(response) {
            console.log('استجابة الطلب:', response);
            if (response.success) {
              alert('تم إضافة جميع المجموعات إلى القائمة بنجاح');
              // إعادة تحميل الصفحة لعرض المجموعات المضافة
              location.reload();
            } else {
              alert('حدث خطأ أثناء إضافة جميع المجموعات: ' + response.error);
            }
          },
          error: function(xhr, status, error) {
            console.error('خطأ في الطلب:', status, error);
            alert('حدث خطأ أثناء الاتصال بالخادم: ' + error);
          }
        });
      });
    });
  </script>
</body>
</html> 